tst output{
	main()
	{
		printf("\n");
		printf("#define CC_ASCII	0		/* US-ASCII			*/\n");
		printf("#define CC_EBCDIC1	1		/* Xopen dd(1) IBM		*/\n");
		printf("#define CC_EBCDIC2	2		/* Xopen dd(1) EBCDIC		*/\n");
		printf("#define CC_EBCDIC3	3		/* mvs OpenEdition EBCDIC	*/\n");
		printf("\n");
		printf("#define CC_MAPS		4		/* number of code maps		*/\n");
		printf("\n");
		switch ('~')
		{
		case 0241:
			switch ('\n')
			{
			case 0025:
				printf("#define CC_NATIVE	CC_EBCDIC3	/* native character code	*/\n");
				break;
			default:
				printf("#define CC_NATIVE	CC_EBCDIC1	/* native character code	*/\n");
				break;
			}
			break;
		case 0137:
			printf("#define CC_NATIVE	CC_EBCDIC2	/* native character code	*/\n");
			break;
		default:
			printf("#define CC_NATIVE	CC_ASCII	/* native character code	*/\n");
			break;
		}
		printf("\n");
		if ('A' == 0301)
		{
			printf("#define CC_bel		0057		/* bel character		*/\n");
			printf("#define CC_esc		0047		/* esc character		*/\n");
			printf("#define CC_sub		0077		/* sub character		*/\n");
			printf("#define CC_vt		0013		/* vt character			*/\n");
		}
		else
		{
			printf("#define CC_bel		0007		/* bel character		*/\n");
			printf("#define CC_esc		0033		/* esc character		*/\n");
			printf("#define CC_sub		0032		/* sub character		*/\n");
			printf("#define CC_vt		0013		/* vt character			*/\n");
		}
		return 0;
	}
}end
